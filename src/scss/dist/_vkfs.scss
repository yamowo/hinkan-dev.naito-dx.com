@charset "UTF-8";
@use "../global" as *;
/* =========================================================
//  VK Filter Search
// ========================================================= */
.vkfs__call-filter-search, .vk-filter-search {
  margin-bottom: 0!important;
}
// 送信ボタン
.vkfs_submit {
  --the-fz: 1em;
  --the-width: auto;
  --the-min-width: 64%;
  --the-padding: .75em 1.5em;
  --the-btn-color: var(--color_main);
  --the-btn-color2: var(--color_main);
  --the-btn-bg: var(--the-btn-color);
  display: block;
  font-size: var(--the-fz);
  margin: 0 auto 2em;
  position: relative;
  text-align: center;
  
  --the-btn-radius: 80px;
  background-color: var(--the-btn-bg);
  color: #fff;
  font-weight: var(--swl-font_weight);
  background: var(--the-btn-bg);
  border-radius: var(--the-btn-radius, 0);
  box-shadow: var(--swl-btn_shadow);
  &:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,.1),0 12px 24px -12px rgba(0,0,0,.2);
    opacity: 1;
  }

  &::before{
    content:"";
    display:inline-block;
    width:1em;
    height:1em;
    margin-right: .5em;
    vertical-align: -0.125em;
  
    /* 単色はここで指定。親の文字色に追従させるなら currentColor */
    background-color: currentColor;
  
    /* マスクで形だけ抜く（WebKit用と標準の両方） */
    -webkit-mask: url("data:image/svg+xml;utf8,\
  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'>\
  <path d='M44.5 41.7 35 32.1c2.5-3.1 4-7 4-11.2 0-9.9-8.1-18-18-18S3 11 3 20.9s8.1 18 18 18c4.2 0 8.1-1.5 11.2-4l9.5 9.5c.8.8 2 .8 2.8 0 .8-.7.8-1.9 0-2.7zm-23.6-6.8c-7.7 0-14-6.3-14-14s6.3-14 14-14 14 6.3 14 14-6.3 14-14 14z'/>\
  </svg>") no-repeat center / contain;
            mask: url("data:image/svg+xml;utf8,\
  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'>\
  <path d='M44.5 41.7 35 32.1c2.5-3.1 4-7 4-11.2 0-9.9-8.1-18-18-18S3 11 3 20.9s8.1 18 18 18c4.2 0 8.1-1.5 11.2-4l9.5 9.5c.8.8 2 .8 2.8 0 .8-.7.8-1.9 0-2.7zm-23.6-6.8c-7.7 0-14-6.3-14-14s6.3-14 14-14 14 6.3 14 14-6.3 14-14 14z'/>\
  </svg>") no-repeat center / contain;
  }
  .vkfs_submit-text {
    padding-right: 1em;
  }
}
.vkfs .btn[type=submit] {
  padding: .75em 1em;
}

// ラベル
.vkfs__label-accordion-form.vk-filter-search .vkfs__label-name:has(.vkfs__label-accordion-trigger) {
  padding-bottom: .25rem;
}
.vkfs__label-name-inner {
  color: var(--color_main);
  font-size: 1.1rem;
}

.vkfs__label-accordion-form.vk-filter-search .vkfs__label-accordion-outer-wrap.vkfs__outer-wrap, .vkfs__label-accordion-form.vk-filter-search .vkfs__label-accordion-outer-wrap.vkfs__outer-wrap .vkfs__label-name {
  margin-bottom: .5rem;
}

// クリアボタン
.is-style-btn_line.-vk-clear a {
  background: #fff;
  border: 1px solid;
  // color: var(--the-btn-color,var(--color_main));
  color: #848484;
  position: relative;
  transition: background-color .25s;
  &:hover {
    color: #848484!important;
    opacity: .6;
  }
  width: calc(100% - .8rem);
}

// 隠れ要素クリック抑止
/* 閉じている面は完全に非インタラクティブ */
.vkfs__label-accordion-content--close{
  pointer-events: none;
  visibility: hidden;   /* ← これを足す */
  overflow: hidden;
  max-height: 0;        /* 使っていればそのまま */
}
/* 開いている面は通常動作 */
.vkfs__label-accordion-content--open{
  pointer-events: auto;
  visibility: visible;
}
.vkfs__label-accordion-form.vk-filter-search .vkfs__label-accordion-content--close.vkfs__input-wrap {
  height: 0;
  margin-bottom: 0;
  opacity: 0;
  padding: 0!important;
  transform: translateY(-20%);
}
.vkfs__label-accordion-form.vk-filter-search .vkfs__label-accordion-content--open.vkfs__input-wrap {
  margin-top: 1rem;
  opacity: 1;
  transform: translateY(0);
  // transition: all .1s;
  transition: transform .2s, opacity .1s ease .1s;
}
.vkfs__label-accordion-form.vk-filter-search .vkfs__keyword {
  input[type=text] {
    color: var(--color_deep01);
    font-weight: var(--swl-font_weight);
  }
  .vkfs__label-name {
    border-bottom: none;
    margin-bottom: 0!important;
  }
  .vkfs__label-accordion-content--open {
    &.vkfs__input-wrap {
      margin-top: 0;
      margin-bottom: .5rem!important;
    }
  }
  .vkfs__label-name:has(.vkfs__label-accordion-trigger) .vkfs__label-accordion-trigger.vkfs__label-accordion-trigger--open {
    &::after {
      display: none;
    }
  }
}
.vkfs input[type=checkbox]:after {
  border-bottom: 3px solid var(--color_deep01);
  border-right: 3px solid var(--color_deep01);
}
.vkfs__input-wrap--checkbox {
  label:has(> input[type="checkbox"]:checked) {
    color: var(--color_deep01);
  }
}